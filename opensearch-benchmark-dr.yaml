AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for OpenSearch Benchmark DR Infrastructure'

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.1.0.0/16
    Description: CIDR block for the DR VPC (different from primary region)

  PublicSubnet1CIDR:
    Type: String
    Default: 10.1.1.0/24
    Description: CIDR block for public subnet 1

  PrivateSubnet1CIDR:
    Type: String
    Default: 10.1.2.0/24
    Description: CIDR block for private subnet 1

  PrivateSubnet2CIDR:
    Type: String
    Default: 10.1.3.0/24
    Description: CIDR block for private subnet 2

  OpenSearchDomainName:
    Type: String
    Default: benchmark-domain-dr
    Description: Name of the DR OpenSearch domain

  PrimaryDomainEndpoint:
    Type: String
    Description: Endpoint of the primary region OpenSearch domain

  PrimaryRegion:
    Type: String
    Description: Region where primary OpenSearch domain is deployed

  DataNodeCount:
    Type: Number
    Default: 2
    MinValue: 2
    MaxValue: 10
    Description: Number of data nodes (must be even for Multi-AZ)

  InstanceType:
    Type: String
    Default: m5.xlarge
    AllowedValues:
      - t3.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
    Description: EC2 instance type for the benchmark runner

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

  ScriptsBucketName:
    Type: String
    Description: Name of the S3 bucket containing benchmark scripts

Resources:
  # VPC and Network Configuration
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-IGW
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Public-Subnet
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Private-Subnet-1
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Private-Subnet-2
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Route-Table
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Security Groups
  BenchmarkSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for benchmark EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-EC2-SG
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  OpenSearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for OpenSearch domain
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref BenchmarkSecurityGroup
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Domain-SG
        - Key: Project
          Value: OpenSearch-Benchmark-DR

  # IAM Role and Instance Profile
  BenchmarkRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-IAM-Role
        - Key: Project
          Value: OpenSearch-Benchmark-DR
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${ScriptsBucketName}
                  - !Sub arn:aws:s3:::${ScriptsBucketName}/*
        - PolicyName: OpenSearchAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - es:ESHttp*
                Resource: 
                  - !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${OpenSearchDomainName}/*
                  - !Sub arn:aws:es:${PrimaryRegion}:${AWS::AccountId}:domain/*

  BenchmarkInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BenchmarkRole

  # OpenSearch Domain
  OpenSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: !Ref OpenSearchDomainName
      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Domain
        - Key: Project
          Value: OpenSearch-Benchmark-DR
      EngineVersion: OpenSearch_2.5
      ClusterConfig:
        InstanceType: r6g.large.search
        InstanceCount: !Ref DataNodeCount
        DedicatedMasterEnabled: true
        DedicatedMasterType: r6g.large.search
        DedicatedMasterCount: 3
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 100
        VolumeType: gp3
      VPCOptions:
        SubnetIds:
          - !Ref PrivateSubnet1
          - !Ref PrivateSubnet2
        SecurityGroupIds:
          - !Ref OpenSearchSecurityGroup
      EncryptionAtRestOptions:
        Enabled: true
      NodeToNodeEncryptionOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: Policy-Min-TLS-1-2-2019-07
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: admin
          MasterUserPassword: Admin123!

  # EC2 Instance for Benchmark
  BenchmarkInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      KeyName: !Ref KeyPairName
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref BenchmarkSecurityGroup
      IamInstanceProfile: !Ref BenchmarkInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y git python3 python3-pip jq aws-cli unzip

          # Create benchmark directory
          mkdir -p /home/ec2-user/opensearch-benchmark
          cd /home/ec2-user/opensearch-benchmark

          # Install required Python packages
          pip3 install opensearch-py requests

          # Download benchmark scripts from S3
          aws s3 cp s3://${ScriptsBucketName}/benchmark-scripts.zip .
          unzip benchmark-scripts.zip

          # Create monitoring scripts directory
          mkdir -p /home/ec2-user/monitoring-scripts
          cd /home/ec2-user/monitoring-scripts

          # Create cluster monitoring script
          cat > monitor-cluster.sh << 'EOL'
          #!/bin/bash
          while true; do
            echo "=== Cluster Health ==="
            curl -s -u admin:Admin123! --insecure https://${OpenSearchDomain.DomainEndpoint}/_cluster/health | jq
            
            echo "=== Node Status ==="
            curl -s -u admin:Admin123! --insecure https://${OpenSearchDomain.DomainEndpoint}/_cat/nodes?v
            
            echo "=== Shard Allocation ==="
            curl -s -u admin:Admin123! --insecure https://${OpenSearchDomain.DomainEndpoint}/_cat/shards?v
            
            sleep 5
          done
          EOL
          chmod +x monitor-cluster.sh

          # Create performance monitoring script
          cat > monitor-performance.sh << 'EOL'
          #!/bin/bash
          while true; do
            echo "=== Thread Pools ==="
            curl -s -u admin:Admin123! --insecure https://${OpenSearchDomain.DomainEndpoint}/_cat/thread_pool?v
            
            echo "=== JVM Stats ==="
            curl -s -u admin:Admin123! --insecure https://${OpenSearchDomain.DomainEndpoint}/_nodes/stats/jvm | jq
            
            sleep 10
          done
          EOL
          chmod +x monitor-performance.sh

          # Create DR test script
          cat > /home/ec2-user/run-dr-test.sh << 'EOL'
          #!/bin/bash
          
          # Test replication from primary to DR
          echo "Testing replication from primary to DR cluster..."
          opensearch-benchmark execute-test \
            --target-hosts=${PrimaryDomainEndpoint} \
            --client-options="use_ssl:true,verify_certs:false,basic_auth_user:admin,basic_auth_password:Admin123!" \
            --test-procedure=default \
            --workload=geonames \
            --workload-params "bulk_size:5000,number_of_replicas:1"

          # Wait for replication
          sleep 60

          # Test DR cluster
          echo "Testing DR cluster..."
          opensearch-benchmark execute-test \
            --target-hosts=${OpenSearchDomain.DomainEndpoint} \
            --client-options="use_ssl:true,verify_certs:false,basic_auth_user:admin,basic_auth_password:Admin123!" \
            --test-procedure=search-only \
            --workload=geonames

          # Test failover scenario
          echo "Testing failover scenario..."
          opensearch-benchmark execute-test \
            --target-hosts=${OpenSearchDomain.DomainEndpoint} \
            --client-options="use_ssl:true,verify_certs:false,basic_auth_user:admin,basic_auth_password:Admin123!" \
            --test-procedure=default \
            --workload=http_logs \
            --workload-params "bulk_size:1000,number_of_replicas:1"
          EOL

          chmod +x /home/ec2-user/run-dr-test.sh
          chown -R ec2-user:ec2-user /home/ec2-user/monitoring-scripts
          chown -R ec2-user:ec2-user /home/ec2-user/opensearch-benchmark
          chmod -R 755 /home/ec2-user/opensearch-benchmark

      Tags:
        - Key: Name
          Value: OpenSearch-Benchmark-DR-Instance

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0cff7528ff583bf9a
    us-east-2:
      AMI: ami-02d1e544b84bf7502
    us-west-1:
      AMI: ami-0d9858aa3c6322f73
    us-west-2:
      AMI: ami-098e42ae54c764c35

Outputs:
  BenchmarkInstancePublicIP:
    Description: Public IP of the DR benchmark EC2 instance
    Value: !GetAtt BenchmarkInstance.PublicIp

  OpenSearchDomainEndpoint:
    Description: Endpoint of the DR OpenSearch domain
    Value: !GetAtt OpenSearchDomain.DomainEndpoint

  SSHCommand:
    Description: SSH command to connect to the DR benchmark instance
    Value: !Sub ssh -i ${KeyPairName}.pem ec2-user@${BenchmarkInstance.PublicIp}
